Function that translates DNA to protein

# Dictionary to map codons to amino acids
codon_table = {
    'AUG': 'Methionine', 'UUU': 'Phenylalanine', 'UUC': 'Phenylalanine', 'UUA': 'Leucine', 'UUG': 'Leucine',
    'UCU': 'Serine', 'UCC': 'Serine', 'UCA': 'Serine', 'UCG': 'Serine', 'UAU': 'Tyrosine', 'UAC': 'Tyrosine',
    'UGU': 'Cysteine', 'UGC': 'Cysteine', 'UGA': 'STOP', 'UGG': 'Tryptophan', 'CUU': 'Leucine', 'CUC': 'Leucine',
    'CUA': 'Leucine', 'CUG': 'Leucine', 'CCU': 'Proline', 'CCC': 'Proline', 'CCA': 'Proline', 'CCG': 'Proline',
    'CAU': 'Histidine', 'CAC': 'Histidine', 'CAA': 'Glutamine', 'CAG': 'Glutamine', 'CGU': 'Arginine',
    'CGC': 'Arginine', 'CGA': 'Arginine', 'CGG': 'Arginine', 'AUU': 'Isoleucine', 'AUC': 'Isoleucine',
    'AUA': 'Isoleucine', 'AUG': 'Methionine', 'ACU': 'Threonine', 'ACC': 'Threonine', 'ACA': 'Threonine',
    'ACG': 'Threonine', 'AAU': 'Asparagine', 'AAC': 'Asparagine', 'AAA': 'Lysine', 'AAG': 'Lysine',
    'AGU': 'Serine', 'AGC': 'Serine', 'AGA': 'Arginine', 'AGG': 'Arginine', 'GUU': 'Valine',
    'GUC': 'Valine', 'GUA': 'Valine', 'GUG': 'Valine', 'GCU': 'Alanine', 'GCC': 'Alanine',
    'GCA': 'Alanine', 'GCG': 'Alanine', 'GAU': 'Aspartic Acid', 'GAC': 'Aspartic Acid', 'GAA': 'Glutamic Acid',
    'GAG': 'Glutamic Acid', 'GGU': 'Glycine', 'GGC': 'Glycine', 'GGA': 'Glycine', 'GGG': 'Glycine'}
def dna_to_protein(dna_sequence):
    # 1: Transcribe DNA to mRNA (replace T with U)
    mRNA = dna_sequence.replace('T', 'U')
    #2: Split mRNA into codons (3 nucleotides each)
    codons = [mRNA[i:i+3] for i in range(0, len(mRNA), 3)]
    # 3: Translate codons to amino acids
    protein = []
    for codon in codons:
       if codon in codon_table:
         amino_acid = codon_table[codon]
         if amino_acid == 'STOP':
            break
       protein.append(amino_acid)
       return protein
 
   
# Using it in an example 

dna = "ATGGCCATTGTAATGGGCCGAGGAG"
protein = dna_to_protein(dna)
print(protein)
